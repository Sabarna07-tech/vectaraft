syntax = "proto3";
package vectordb.v1;

service VectorDb {
  rpc Ping(PingRequest) returns (PingResponse);
  rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse);
  rpc Upsert(UpsertRequest) returns (UpsertResponse);
  rpc Query(QueryRequest) returns (QueryResponse);
}

message PingRequest {}
message PingResponse {}

message CreateCollectionRequest {
  string name = 1;
  uint32 dims = 2;
  string metric = 3; // l2 | ip | cosine
}
message CreateCollectionResponse {}

message Point {
  string id = 1;
  repeated float vector = 2 [packed = true];
  string payload_json = 3; // optional JSON string
}

message UpsertRequest {
  string collection = 1;
  repeated Point points = 2;
}
message UpsertResponse {
  uint32 upserted = 1;
}

message QueryRequest {
  string collection = 1;
  repeated float vector = 2 [packed = true];
  uint32 top_k = 3;
  string metric_override = 4; // optional override instead of collection default
  bool with_payloads = 5;
  repeated Filter filters = 6;
}

message ScoredPoint {
  string id = 1;
  float score = 2; // similarity
  string payload_json = 3;
}

message QueryResponse {
  repeated ScoredPoint hits = 1;
}

message Filter {
  string key = 1;
  string equals = 2;
}
